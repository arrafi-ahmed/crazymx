/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    'event-landing-slug': RouteRecordInfo<'event-landing-slug', '/:slug', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    'attendee-form-slug': RouteRecordInfo<'attendee-form-slug', '/:slug/attendee-form', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    'checkout-slug': RouteRecordInfo<'checkout-slug', '/:slug/checkout', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    'event-register-success-slug': RouteRecordInfo<'event-register-success-slug', '/:slug/success', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    'tickets-slug': RouteRecordInfo<'tickets-slug', '/:slug/tickets', { slug: ParamValue<true> }, { slug: ParamValue<false> }>,
    '/auth/': RouteRecordInfo<'/auth/', '/auth', Record<never, never>, Record<never, never>>,
    'register': RouteRecordInfo<'register', '/auth/Register', Record<never, never>, Record<never, never>>,
    'signin': RouteRecordInfo<'signin', '/auth/Signin', Record<never, never>, Record<never, never>>,
    'signout': RouteRecordInfo<'signout', '/auth/Signout', Record<never, never>, Record<never, never>>,
    '/club/': RouteRecordInfo<'/club/', '/club', Record<never, never>, Record<never, never>>,
    'club-add': RouteRecordInfo<'club-add', '/club/add', Record<never, never>, Record<never, never>>,
    'credential-generate': RouteRecordInfo<'credential-generate', '/club/credential/:clubId', { clubId: ParamValue<true> }, { clubId: ParamValue<false> }>,
    'club-edit': RouteRecordInfo<'club-edit', '/club/edit/:clubId?', { clubId?: ParamValueZeroOrOne<true> }, { clubId?: ParamValueZeroOrOne<false> }>,
    'dashboard': RouteRecordInfo<'dashboard', '/dashboard', Record<never, never>, Record<never, never>>,
    'dashboard-admin': RouteRecordInfo<'dashboard-admin', '/dashboard/admin', Record<never, never>, Record<never, never>>,
    'dashboard-sudo': RouteRecordInfo<'dashboard-sudo', '/dashboard/sudo', Record<never, never>, Record<never, never>>,
    '/event/': RouteRecordInfo<'/event/', '/event', Record<never, never>, Record<never, never>>,
    '/event/[eventId]/': RouteRecordInfo<'/event/[eventId]/', '/event/:eventId', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-attendees': RouteRecordInfo<'event-attendees', '/event/:eventId/attendees', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-checkin': RouteRecordInfo<'event-checkin', '/event/:eventId/checkin', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-config': RouteRecordInfo<'event-config', '/event/:eventId/config', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-edit': RouteRecordInfo<'event-edit', '/event/:eventId/edit', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-extras': RouteRecordInfo<'event-extras', '/event/:eventId/extras', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'import': RouteRecordInfo<'import', '/event/:eventId/import', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-landing-config': RouteRecordInfo<'event-landing-config', '/event/:eventId/landing-config', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    '/event/[eventId]/qr/': RouteRecordInfo<'/event/[eventId]/qr/', '/event/:eventId/qr', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'qr-viewer': RouteRecordInfo<'qr-viewer', '/event/:eventId/qr/:registrationId/:attendeeId/:qrUuid', { eventId: ParamValue<true>, registrationId: ParamValue<true>, attendeeId: ParamValue<true>, qrUuid: ParamValue<true> }, { eventId: ParamValue<false>, registrationId: ParamValue<false>, attendeeId: ParamValue<false>, qrUuid: ParamValue<false> }>,
    'event-sponsorship-packages': RouteRecordInfo<'event-sponsorship-packages', '/event/:eventId/sponsorship-packages', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-sponsorships': RouteRecordInfo<'event-sponsorships', '/event/:eventId/sponsorships', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-statistics': RouteRecordInfo<'event-statistics', '/event/:eventId/statistics', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-tickets': RouteRecordInfo<'event-tickets', '/event/:eventId/tickets', { eventId: ParamValue<true> }, { eventId: ParamValue<false> }>,
    'event-add': RouteRecordInfo<'event-add', '/event/add', Record<never, never>, Record<never, never>>,
    'extras-purchase': RouteRecordInfo<'extras-purchase', '/ExtrasPurchase', Record<never, never>, Record<never, never>>,
    'form-builder': RouteRecordInfo<'form-builder', '/form-builder', Record<never, never>, Record<never, never>>,
    'not-found': RouteRecordInfo<'not-found', '/NotFound', Record<never, never>, Record<never, never>>,
    'pricing': RouteRecordInfo<'pricing', '/Pricing', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/[slug]/index.vue': {
      routes: 'event-landing-slug'
      views: never
    }
    'src/pages/[slug]/attendee-form.vue': {
      routes: 'attendee-form-slug'
      views: never
    }
    'src/pages/[slug]/checkout.vue': {
      routes: 'checkout-slug'
      views: never
    }
    'src/pages/[slug]/success.vue': {
      routes: 'event-register-success-slug'
      views: never
    }
    'src/pages/[slug]/tickets.vue': {
      routes: 'tickets-slug'
      views: never
    }
    'src/pages/auth/index.vue': {
      routes: '/auth/'
      views: never
    }
    'src/pages/auth/Register.vue': {
      routes: 'register'
      views: never
    }
    'src/pages/auth/Signin.vue': {
      routes: 'signin'
      views: never
    }
    'src/pages/auth/Signout.vue': {
      routes: 'signout'
      views: never
    }
    'src/pages/club/index.vue': {
      routes: '/club/'
      views: never
    }
    'src/pages/club/add/index.vue': {
      routes: 'club-add'
      views: never
    }
    'src/pages/club/credential/[clubId].vue': {
      routes: 'credential-generate'
      views: never
    }
    'src/pages/club/edit/[[clubId]].vue': {
      routes: 'club-edit'
      views: never
    }
    'src/pages/dashboard/index.vue': {
      routes: 'dashboard'
      views: never
    }
    'src/pages/dashboard/admin/index.vue': {
      routes: 'dashboard-admin'
      views: never
    }
    'src/pages/dashboard/sudo/index.vue': {
      routes: 'dashboard-sudo'
      views: never
    }
    'src/pages/event/index.vue': {
      routes: '/event/'
      views: never
    }
    'src/pages/event/[eventId]/index.vue': {
      routes: '/event/[eventId]/'
      views: never
    }
    'src/pages/event/[eventId]/attendees/index.vue': {
      routes: 'event-attendees'
      views: never
    }
    'src/pages/event/[eventId]/checkin/index.vue': {
      routes: 'event-checkin'
      views: never
    }
    'src/pages/event/[eventId]/config/index.vue': {
      routes: 'event-config'
      views: never
    }
    'src/pages/event/[eventId]/edit/index.vue': {
      routes: 'event-edit'
      views: never
    }
    'src/pages/event/[eventId]/extras/index.vue': {
      routes: 'event-extras'
      views: never
    }
    'src/pages/event/[eventId]/import/index.vue': {
      routes: 'import'
      views: never
    }
    'src/pages/event/[eventId]/landing-config/index.vue': {
      routes: 'event-landing-config'
      views: never
    }
    'src/pages/event/[eventId]/qr/index.vue': {
      routes: '/event/[eventId]/qr/'
      views: never
    }
    'src/pages/event/[eventId]/qr/[registrationId]/[attendeeId]/[qrUuid].vue': {
      routes: 'qr-viewer'
      views: never
    }
    'src/pages/event/[eventId]/sponsorship-packages/index.vue': {
      routes: 'event-sponsorship-packages'
      views: never
    }
    'src/pages/event/[eventId]/sponsorships/index.vue': {
      routes: 'event-sponsorships'
      views: never
    }
    'src/pages/event/[eventId]/statistics/index.vue': {
      routes: 'event-statistics'
      views: never
    }
    'src/pages/event/[eventId]/tickets/index.vue': {
      routes: 'event-tickets'
      views: never
    }
    'src/pages/event/add/index.vue': {
      routes: 'event-add'
      views: never
    }
    'src/pages/ExtrasPurchase.vue': {
      routes: 'extras-purchase'
      views: never
    }
    'src/pages/form-builder.vue': {
      routes: 'form-builder'
      views: never
    }
    'src/pages/NotFound.vue': {
      routes: 'not-found'
      views: never
    }
    'src/pages/Pricing.vue': {
      routes: 'pricing'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
